
https://docs.google.com/document/d/130YMvQO2tqBXioqX3mvP7hk9l58QUsWZmrhXUXrG_h4/edit?tab=t.0#heading=h.b945vx857czl

// cin và call function xử lý trong main
// 1 bài function gồm 3 bước
// Input:
int n;
cin >> n;
revNumber(n);

// B1:
int a, b;
cin >> a >> b;

// B3: Gọi hàm (input gì truyền vào đối số hàm)
cout << sum(a, b);

===
void revNumber(int n) {
    string m = to_string(n); // convert int to string
    for (int i = m.size() - 1; i >= 0; i--) {
        cout << m[i];
    }
}

// B2: Viết hàm (input gì thì truyền nó vào tham số hàm)
int sum(int a, int b) {
    return a + b;
}

// Nhập 2 số a,b và viết 1 hàm tính tổng 2 số:
===
/*
 * // Exercise 11: Reverse a Number
// Input: 1234 - output: 4321
// String:
// Viết 1 hàm tính tổng các chữ số của 1 số được nhập vào:
// Input: 1234 - output: 10 ( 1 + 2 + 3 + 4 )
int sum(int a) {
    string b = to_string(a); // "1234" -> '1','2','3,'4'
    int sum = 0;
    for (char i: b) {
        sum = sum + (i - '0');
    }
    return sum;
}

string str = "123";
int x = stoi(str);
cout << x;
-> Ép kiểu từ string sang int
----
char ch = '9';
int num = ch - '0';
cout << num;
-> Ép kiểu char sang int
   int a;
    cin >> a;
    cout << sum(a);
 */
 ===

void priNumber(int n) {
    int count = 0;
    for (int i = 1; i <= n; i++) {
        if (n % i == 0) {
            count++;
        }
    }
    if (count == 2) {
        cout << n << " la so nguyen to";
    } else {
        cout << "khong la so nguyen to";
    }
}
int n;
cin >> n;
priNumber(n);

====
// Exercise 4: Prime Number Check:


// 1331 -> 1331

// 1234 -> 4321: đảo ngược chuỗi rồi so sánh từng ký tự với nhau, nếu giống nhau là palindrome
void paNumbers(int n) {
    string m = to_string(n); // "1331"
    string reverse = "";

    for (int i = m.size() - 1; i >= 0; i--) {
        reverse = reverse + m[i];
    }
    cout << reverse << endl;

    // m với chuỗi reverse (nếu = nhau là palindrome)
    if (m == reverse) cout << "Palindrome";
    else cout << "not palindrome";
}

int n;
cin >> n;
paNumbers(n);

===
// arr: [1,3,5,7,9] size = 5
// Input: N = 7

// Output: 7-9
void arrNumber(int arr[], int n, int size) {
    for (int i = 0; i < size; i++) {
        if (arr[i] >= n) {
            cout << arr[i];
        }
    }
}
int n;
cin >> n;
int size;
cin >> size;
int arr[size]; // - - - - -
for (int i = 0; i < size; i++) {
int a;
cin >> a;
arr[i] = a;
}
arrNumber(arr, n, size);

--

double findAvg(int array[], int size) {
    double sum = 0;
    for (int i = 0; i < size; i++) {
        sum = sum + array[i];
    }
    return sum / size;
}

int findMin(int array[], int size) {
    int minNumber = array[0];
    // 1 8 5 7 9
    // maxNumber = arr[0] = 1
    //         ->
    // Cầm giá trị maxNumber so sánh array[i] -> nếu array[i] > maxNumber -> maxNumber là array[i]
    for (int i = 0; i < size; i++) {
        if (array[i] < minNumber) {
            minNumber = array[i];
        }

    }
    return minNumber;
}

//void displayArray(int array[], int size) {
//for (int i = 0; i < size; i++)
//cout << array[i];}
int size;
cin >> size;
int array[size];
for (int i = 0; i < size; i++) {
int a;
cin >> a;
array[i] = a;
}
cout << findAvg(array, size);